{% set amount = salt['pillar.get']('containers:api:amount:new', '') -%}
{% set active = salt['pillar.get']('containers:api:active', '') -%}
{% set username = salt['pillar.get']('haproxy:username', '') -%}
{% set password = salt['pillar.get']('haproxy:password', '') -%}
{% set name = salt['pillar.get']('containers:api:name', '') -%}
{% set id = grains['id'] -%}

global
    log 127.0.0.1 local0
    log 127.0.0.1 local1 notice
    maxconn 2048
    tune.ssl.default-dh-param 2048
    tune.bufsize 10240000

defaults
    log global
    mode http
    option httplog
    option dontlognull
    option redispatch
    timeout connect 5000
    timeout client  10000
    timeout server  10000
    stats enable
    stats uri /haproxy?stats
    stats realm Strictly\ Private
    stats auth {{ username }}:{{ password }}

frontend http-in
    bind 0.0.0.0:80
    acl host_api hdr_dom(host) -i api
    use_backend api-{{ active }} if host_api
    default_backend api-{{ active }}

backend api-blue
    option httpclose
    option forwardfor
{% for no in range(0, amount|int + 1) %}
{% if salt['docker.inspect_container']('blue-node-demo-' + no|string)['out']['NetworkSettings']['Ports']['8080/tcp'][0] -%}
{%- set container = salt['docker.inspect_container']('blue-node-demo-' + no|string)['out']['NetworkSettings']['Ports']['8080/tcp'][0] -%}
    server container {{ container['HostIp'] }}:{{ container['HostPort'] }} check
{% endif -%}
{% endfor -%}

backend api-green
    option httpclose
    option forwardfor
{% for no in range(0, amount|int + 1) %}
{% if salt['docker.inspect_container']('green-node-demo-' + no|string)['out']['NetworkSettings']['Ports']['8080/tcp'][0] -%}
{%- set container = salt['docker.inspect_container']('green-node-demo-' + no|string)['out']['NetworkSettings']['Ports']['8080/tcp'][0] -%}
    server container {{ container['HostIp'] }}:{{ container['HostPort'] }} check
{% endif -%}
{% endfor -%}
